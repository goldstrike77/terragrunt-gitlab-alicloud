stages:
  - build
  - plan
  - deploy
  - cleanup

variables:
  TF_DATA_DIR: "$HOME/.terraform"
  IGNORE_TF_DEPRECATION_WARNING: "true"

image:
  name: "registry.cn-hangzhou.aliyuncs.com/goldenimage/terragrunt:1.10.1-v0.69.9"

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .terraform/
  policy: pull

before_script:
  - cp /etc/gitlab-runner/certs/gitlab.home.local.crt /usr/local/share/ca-certificates/ca.crt
  - update-ca-certificates
  - |-
    cat <<EOF > ~/.terraformrc
    provider_installation {
      network_mirror {
        url = "https://obs.home.local/mirror/"
      }
    }
    EOF

build:
  stage: build
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .terraform/
    policy: pull-push
  script:
    - terragrunt run-all init -auto-approve --terragrunt-parallelism 1

plan:
  stage: plan
  script:
    - terragrunt run-all plan --terragrunt-parallelism 1
  rules:
    - if: $CI_COMMIT_TITLE == "deploy" or $CI_COMMIT_TITLE == "destroy"
      when: on_success

deploy:
  stage: deploy
  script:
    - terragrunt run-all apply -auto-approve --terragrunt-parallelism 1
  rules:
    - if: $CI_COMMIT_TITLE == "deploy"
      when: manual

cleanup:
  stage: cleanup
  script:
    - terragrunt run-all destory -auto-approve --terragrunt-parallelism 1
  rules:
    - if: $CI_COMMIT_TITLE == "destroy"
      when: manual